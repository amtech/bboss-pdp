sourceSets {
    main {
        java {
            srcDir 'src'
           
        }
        
        
    }
    test {
    		resources {
           srcDir 'resources'            
        }
    }
    
    
}

dependencies {
		compile project(':bboss-pdp-dubbo-inf')
   compile (
               
       [group: 'com.bbossgroups.plugins', name: 'bboss-plugin-dubbo', version: "${bbossplugin_version}", transitive: true],
         
    )
    
    runtime(
		[group: 'com.bbossgroups', name: 'bboss-rt', version: "${bboss_version}", transitive: false],
    )
    
     
}

task copyJarFiles(type: Sync,dependsOn:'jar'){



	 from configurations.compile
	 from jar.outputs
	 exclude { details -> details.file.name.startsWith('bboss-rt')  }
	 into 'build/dist/lib'

}

task copyRTJarFiles(type: Copy,dependsOn:'copyJarFiles'){
	 from configurations.runtime - configurations.compile
	 into 'build/dist'
     rename ("bboss-rt-${bboss_version}.jar", "${project.name}-${bboss_version}.jar")
}
task copyToolFiles(type: Copy ,dependsOn:'copyRTJarFiles')  {
			from ('runfiles')
			{
				expand(
						bboss_version:"${bboss_version}",
                        project:"${project.name}",
                        vm:"-Xms512m -Xmx512m -Xmn256m -XX:PermSize=128M -XX:MaxPermSize=128M"
						)

			}
		  filteringCharset = 'UTF-8'
			into 'build/dist/'



}
task copyResourcesfiles(type: Sync )  {
	from fileTree(dir: 'src/test/resources')
	filteringCharset = 'UTF-8'
	into 'build/dist/resources'
}

task releaseVersion(type: Zip,dependsOn:['copyToolFiles','copyResourcesfiles']) {

    //appendix = 'wrapper'
   classifier = 'released'
   from 'build/dist/'

}