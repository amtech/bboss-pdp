<?xml version="1.0" encoding="UTF-8" ?>

<web-app xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
         version="2.4">

    <display-name>BBoss Web Application</display-name>
    <listener>
        <description><![CDATA[应用销毁监听器：
		在应用销毁之前调用系统shutdown 回调函数，前提是所有的shutdown回调函数
		是通过以下方法注册：
		BaseApplicationContext.addShutdownHook(new Runnable(){

				@Override
				public void run() {
					
					try {
						stop();
					

					} catch (Throwable e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}});]]>

        </description>
        <listener-class>org.frameworkset.web.listener.ApplicationLifeListener</listener-class>
    </listener>
    <filter>
        <filter-name>HeaderFilter</filter-name>
        <filter-class>com.frameworkset.common.filter.HeaderFilter</filter-class>
        <!--是否启用跨站域名防火墙，为true，则启用，如果来源域名不在refererwallwhilelist中，则拒绝访问-->
        <init-param>
            <param-name>refererDefender</param-name>
            <param-value>false</param-value>

        </init-param>
        <init-param>
            <param-name>refererwallwhilelist</param-name>
            <param-value>*.sany.com.cn</param-value>
        </init-param>
        <init-param>
            <param-name>Timing-Allow-Origin</param-name>
            <param-value>*</param-value>
        </init-param>

        <init-param>
            <param-name>cors.allowed.origins</param-name>
            <param-value>*</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowed.methods</param-name>
            <param-value>GET,POST,OPTIONS</param-value></init-param>
        <init-param>
            <param-name>cors.allowed.headers</param-name>
            <param-value>Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers</param-value>
        </init-param>
        <init-param>
            <param-name>cors.exposed.headers</param-name>
            <param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
        </init-param>
        <init-param>
            <param-name>cors.support.credentials</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>cors.preflight.maxage</param-name>
            <param-value>10</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>HeaderFilter</filter-name>
        <url-pattern>*</url-pattern>
    </filter-mapping>
    <filter>
        <filter-name>CharsetEncoding</filter-name>
        <filter-class>com.frameworkset.common.filter.TicketSessionCharsetEncodingFilter</filter-class>
        <init-param>
            <param-name>RequestEncoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>


        <init-param>
            <param-name>wallfilterrules</param-name>
            <param-value>
                <![CDATA[><,%3E%3C,<iframe,%3Ciframe,<script,%3Cscript,<img,%3Cimg,alert(,alert%28,eval(,eval%28,style=,style%3D,[window['location'],{valueOf:alert},{toString:alert},[window["location"],new Function(]]>
            </param-value>

        </init-param>

        <init-param>
            <param-name>wallwhilelist</param-name>
            <param-value><![CDATA[content,fileContent,extfieldvalues,questionString,templeContent]]>
            </param-value>

        </init-param>
        <init-param>
            <param-name>ignoreParameterDecoding</param-name>
            <param-value>true</param-value>

        </init-param>


    </filter>


    <filter-mapping>
        <filter-name>CharsetEncoding</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CharsetEncoding</filter-name>
        <url-pattern>*.do</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CharsetEncoding</filter-name>
        <url-pattern>*.frame</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CharsetEncoding</filter-name>
        <url-pattern>*.page</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CharsetEncoding</filter-name>
        <url-pattern>*.freepage</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CharsetEncoding</filter-name>
        <url-pattern>/cxfservices/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CharsetEncoding</filter-name>
        <url-pattern>/jasperreport/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CharsetEncoding</filter-name>
        <url-pattern>/druid/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CharsetEncoding</filter-name>
        <url-pattern>/Kaptcha.jpg</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>securityFilter</filter-name>
        <filter-class>org.frameworkset.platform.security.SYSAuthenticateFilter</filter-class>
        <init-param>
            <param-name>patternsExclude</param-name>
            <param-value>
                /jsp/logoutredirect.jsp,
                /jsp/login.jsp,
                /login.page,
                /jsp/logout.jsp,
                /test/testmmssso.jsp,
                /test/testssowithtoken.jsp,
                /sso/applogin.page
                /sso/sso.page,
                /sso/wxsso.page,
                /sso/recive.page,
                /sso/ssowithtoken.page,
                /sso/ssowithticket.page,
                /security/cookieLocale.page,
                /monitor/dbmonitor_activitedetail.jsp
            </param-value>
        </init-param>
        <init-param>
            <param-name>redirecturl</param-name>
            <param-value>/jsp/logoutredirect.jsp</param-value>
        </init-param>
        <init-param>
            <param-name>preventDispatchLoop</param-name>
            <param-value>false</param-value>
        </init-param>

        <init-param>
            <param-name>enablePermissionCheck</param-name>
            <param-value>true</param-value>
        </init-param>


        <init-param>
            <param-name>authorfailedurl</param-name>
            <param-value>/jsp/common/authorfail.jsp</param-value>
        </init-param>
        <init-param>
            <param-name>failedback</param-name>
            <param-value>false</param-value>
        </init-param>
        <init-param>
            <param-name>failedbackurlpattern</param-name>
            <param-value></param-value>
        </init-param>

    </filter>


    <filter-mapping>
        <filter-name>securityFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>securityFilter</filter-name>
        <url-pattern>*.page</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>securityFilter</filter-name>
        <url-pattern>*.frame</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>securityFilter</filter-name>
        <url-pattern>/druid/*</url-pattern>
    </filter-mapping>

    <listener>
        <listener-class>org.frameworkset.filter.BSServletRequestListener</listener-class>
    </listener>


    <!-- 测试控制器：
     /WEB-INF/conf/test/bboss-*.xml,
     -->
    <servlet>
        <servlet-name>mvc</servlet-name>
        <servlet-class>org.frameworkset.web.servlet.DispatchServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>
                /WEB-INF/conf/**/*.xml
            </param-value>
        </init-param>
        <init-param>
            <param-name>messagesources</param-name>
            <param-value>/WEB-INF/messages_pdp,/WEB-INF/messages_pdp_common
            </param-value>
        </init-param>
        <init-param>
            <param-name>useCodeAsDefaultMessage</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>iocLifeCycleEventListeners</param-name>
            <param-value>org.frameworkset.platform.security.SYSIocLifeCycleEventListener</param-value>
        </init-param>
        <load-on-startup>0</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>mvc</servlet-name>
        <url-pattern>*.page</url-pattern>
    </servlet-mapping>
    <!-- freepage这种地址securityFilter安全认证过流器将不拦截，安全放行，如果无需任何会话信息
    可以将请求后缀定义为freepage
     -->
    <servlet-mapping>
        <servlet-name>mvc</servlet-name>
        <url-pattern>*.freepage</url-pattern>
    </servlet-mapping>

    <!--
     <servlet>
    <servlet-name>DruidStatView</servlet-name>
    <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    </servlet>

    <servlet-mapping>
    <servlet-name>DruidStatView</servlet-name>
    <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>-->
    <servlet>
        <display-name>cxf</display-name>
        <servlet-name>cxf</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.RPCCXFServlet</servlet-class>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>cxf</servlet-name>
        <url-pattern>/cxfservices/*</url-pattern>
    </servlet-mapping>


    <servlet>
        <servlet-name>HessionRemote</servlet-name>
        <servlet-class>org.frameworkset.spi.remote.hession.HessionDispatchServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>HessionRemote</servlet-name>
        <url-pattern>/hessian</url-pattern>
    </servlet-mapping>

    <!-- 	<servlet> -->
    <!-- 		<servlet-name>HessionRemote</servlet-name> -->
    <!-- 		<servlet-class>org.frameworkset.spi.remote.hession.HessionDispatchServlet</servlet-class> -->
    <!-- 		<init-param> -->
    <!-- 			<param-name>restful</param-name> -->
    <!-- 			<param-value>true</param-value> -->
    <!-- 		</init-param> -->
    <!-- 	</servlet> -->
    <!-- 	<servlet-mapping> -->
    <!-- 		<servlet-name>HessionRemote</servlet-name> -->
    <!-- 		<url-pattern>/hessian/*</url-pattern> -->
    <!-- 	</servlet-mapping> -->
    <welcome-file-list>
        <welcome-file>/jsp/welcome.jsp</welcome-file>
    </welcome-file-list>

    <error-page>
        <exception-type>org.frameworkset.platform.security.SessionTimeoutExcetpion</exception-type>
        <location>/jsp/logoutredirect.jsp</location>
    </error-page>

    <error-page>
        <error-code>500</error-code>
        <location>/jsp/common/error.jsp</location>
    </error-page>

    <error-page>
        <error-code>503</error-code>
        <location>/jsp/common/error.jsp</location>
    </error-page>

    <!--   <error-page> -->
    <!-- 	<error-code>404</error-code> -->
    <!-- 	<location>/jsp/common/404.jsp</location> -->
    <!--   </error-page> -->


    <security-constraint>
        <web-resource-collection>
            <web-resource-name>h</web-resource-name>
            <url-pattern>/*</url-pattern>
            <!--HeaderFilter cors.allowed.methods参数中的值需要允许访问，不能配置在这里-->
            <http-method>PUT</http-method>
            <http-method>HEAD</http-method>
            <!--<http-method>OPTIONS</http-method>-->
        </web-resource-collection>
        <auth-constraint>
        </auth-constraint>
    </security-constraint>

    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
</web-app>
