<?xml version="1.0" encoding="UTF-8"?>
<!-- =================================================================== -->
<!--            Define All Information Manager:                          -->
<!--               Security,Authenticate(loginmodules),                  -->
<!--               ServiceProvider,ResourceIdentity,                     -->
<!--                                                                      -->
<!-- =================================================================== -->
<!--

	securityenabled="true"，平台全局安全性启用开关

	<config-manager securityenabled="false">
    securitycookieenabled:登录时是否允许cookie

--> 
<config-manager securityenabled="true" securitycookieenabled="false">
	<!--
		application:指定应用名称
		module:指定web模块名称
		
	-->
	<application default="true" name="bspf" >
		 
		 <resources module="console" languages="zh_CN,en_US">
			  <resourcefile src="permission/resource.xml" desc="公用权限授予资源配置文件"/>
			  <resourcefile src="permission/resources-sys.xml" desc="系统管理资源配置文件"/>		
			 
		</resources>
		<permissionModule class="mvc:security.appPermissionModule"/>
		<logmanager class="mvc:org.frameworkset.platform.log.AppLogManager"/>
		<globalconfig file="conf/manager-provider.xml"/>
		<globalmenu file="menus/module.xml"/>
		
		<!--
			authorfaileddirect:权限检测失败跳转页面
			securityenabled：安全机制启用开关,true启用系统安全性，false关闭系统安全性，缺省为true
		-->
		<authorizable authorfaileddirect="jsp/common/authorfailed.jsp">
			<!--
				资源操作许可表
				cachable：可选属性，是否需要缓冲资源/操作/角色之间的关系
				class：资源/操作/角色之间的关系映射实现
				allowIfNoRequiredRole:如果资源没有授予相应的角色，
				是否允许用户访问该资源，
				true表示可以访问，
				false表示不能访问
				providerType指定资源操作许可服务提供者类型，目前支持LDAP和DB两种方式，缺省为DB

			-->
			<permissionrolemap default="true" 
						module="console" cachable="true" 
						allowIfNoRequiredRole="false" 
						class="mvc:security.authorization.permissionRoleMap" />
			<!--
				权限控制表
				cachable：可选属性，是否需要缓冲用户/角色之间的关系
				cachetype:缓冲机制
				class：用户/角色之间的关系映射实现
				providerType指定资源操作许可服务提供者类型，目前支持LDAP和DB两种方式，缺省为DB
				adminrole: 指定系统管理员角色
				everyonegrantedrole 定义每个人都授予的角色
			-->
			<authorizetable module="console"
			                cachable="true"			               
			                adminrole="administrator"
			                everyonegrantedrole="roleofeveryone"
			                class="mvc:security.authorization.authorizationTable" />
		</authorizable>
		<!--
			name:名称属性
			sso:是否允许单点登录，true允许，false不允许，缺省为false
			ssoDomain:单点登录域
			loginpage：登陆失败跳转页面,或者登录退出页面

		-->
		<authenticate loginpage="login.page">
			<!--
				登录验证模块
				name:登录模块名称
				callbackHandler：回调函数
				controlFlag:
				取值范围:required, sufficient, requisite, optional ，相关值含义参考如下：
				required 表示登录模块必须成功。即使它不成功，还将调用其它登录模块。
				optional 表示登录模块可以失败，但如果另一个登录模块成功，总体登录仍可以成功。如果所有登录模块都是可选的，那么要使整个认证成功至少必须有一个模块是成功的。
				requisite 表示登录模块必须成功，而且如果它失败，将不调用其它登录模块。
				sufficient 表示如果登录模块成功，则总体登录将成功，同时假设没有其它必需或必不可少的登录模块失败。
				debug：是否进行调试
				class：登录模块实现类
				registTable:配置用户注册表，目前提供LDAP和DB两种方式，缺省为DB方式
			-->
			<!-- 域账号登陆 -->

		 <!-- <loginModule name="console" controlFlag="required" debug="true" registTable="DB" class="com.sany.ldap.LdapLoginModule" />  -->
 		<!-- <loginModule name="console" controlFlag="required" debug="true" registTable="DB" class="com.sany.application.util.WebSealLDAPLoginModule" />  -->
<!-- 		<loginModule name="console" controlFlag="required" debug="true" registTable="DB" class="com.sany.application.util.TicketUserPasswordLoginModule" /> -->
<!-- 		<loginModule name="console" controlFlag="required" debug="true" registTable="DB" class="com.sany.application.util.TicketLDAPLoginModule" /> -->
				<loginModule name="console" controlFlag="required" debug="true" class="org.frameworkset.platform.security.authenticate.UserPasswordLoginModule" />
		</authenticate>
	
		
	</application>
	 
	
	
</config-manager>
